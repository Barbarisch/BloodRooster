import argparse
import os

from importer import Importer
from dbmodel import create_db


def main():
    parser = argparse.ArgumentParser(description='BloodRooster')
    parser.add_argument('-s', '--sql', required=True, help='SQL connection string')

    subparsers = parser.add_subparsers(help='commands')
    subparsers.required = True
    subparsers.dest = 'command'

    dbinit_group = subparsers.add_parser('dbinit', help='Creates database')
    dbinit_group.add_argument('-d', '--db', help='path to database')

    import_group = subparsers.add_parser('import', help='Import Bloodhound data into database')
    import_group.add_argument('-z', '--zip', help='ZIP file generated by sharphound ingestor')
    import_group.add_argument('-p', '--password', default='', help='Password for ZIP file')

    args = parser.parse_args()

    if args.command == 'dbinit':
        db_conn = args.sql
        # os.environ['SQLALCHEMY_DATABASE_URI'] = db_conn
        create_db(db_conn)
    elif args.command == 'import':
        db_conn = args.sql
        importer = Importer(db_conn=db_conn)
        importer.from_zipfile(args.zip, args.password.encode('utf-8'))
        importer.run()


if __name__ == '__main__':
    main()
